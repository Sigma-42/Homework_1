/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Homework_1;

import javafx.application.Application;

import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.scene.*;
import javafx.scene.control.*;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.*;
import javafx.stage.*;

import java.util.Vector;

public class App extends Application {
    private static Vector<course> courseList = new Vector<course>();
    public String getGreeting(){
        return "Hello, world!";
    }
    public void start(Stage primaryStage) throws Exception {

        //creating a Group object
        Group group = new Group();
        Label error = new Label();
        Label exitCon = new Label("Are you sure you would like\nto exit?");
        exitCon.setVisible(false);

        TextField nameBox = new TextField("Name");
        TextField numberBox = new TextField("Course Number");
        TextField credBox = new TextField("Credits");


        ListView<String> depts = new ListView<String>();
        depts.getItems().addAll(course.getDepts());
        depts.setMaxHeight(150);
        Button dispAll = new Button("Display (all)");
        ListView<course> dispList = new ListView<>();
        dispList.setMaxHeight(250);

        Button close = new Button("Close Program");
        Button conf = new Button("Yes");
        conf.setVisible(false);
        Button deny = new Button("No");
        deny.setVisible(false);
        Button dispDept = new Button("Display (Dept)");
        Button enter = new Button("Enter");
        HBox h1 = new HBox();
        h1.getChildren().addAll(nameBox, numberBox, credBox);
        h1.setSpacing(10);
        HBox h2 = new HBox();
        h2.getChildren().addAll(enter, error);
        h2.setSpacing(10);
        HBox b2 = new HBox();
        b2.getChildren().addAll(dispAll, dispDept);
        b2.setSpacing(10);
        HBox bClose = new HBox();
        bClose.setSpacing(10);
        bClose.getChildren().addAll(conf,deny);
        VBox left = new VBox();
        left.getChildren().addAll(depts, b2,close,exitCon,bClose);
        left.setSpacing(10);
        VBox v1 = new VBox();
        v1.getChildren().addAll(h1, h2, dispList);
        v1.setSpacing(10);
        HBox top = new HBox();
        top.getChildren().addAll(left, v1);
        top.setSpacing(10);


        dispAll.setOnAction(value -> {

            dispList.getItems().clear();
            for (course x : courseList) {
                dispList.getItems().add(x);
            }
        });
        dispDept.setOnAction(value -> {
            dispList.getItems().clear();
            for (course x : courseList) {
                if (x.getCode() == course.deptToCode(depts.getSelectionModel().getSelectedItem())) {
                    dispList.getItems().add(x);
                }
            }
        });
        close.setOnAction(value -> {
            exitCon.setVisible(true);
            conf.setVisible(true);
            deny.setVisible(true);
        });
        deny.setOnAction(value ->{
            exitCon.setVisible(false);
            conf.setVisible(false);
            deny.setVisible(false);
        });
        conf.setOnAction(value ->{
            System.exit(0);
        });

        enter.setOnMouseClicked((event -> {
            if (nameBox.getText().isEmpty() || numberBox.getText().isEmpty() || credBox.getText().isEmpty()) {
                error.setText("Error: All fields must be populated.");
            } else {
                try { //try block for casting and if error is caught, inform user
                    courseList.add(new course(course.deptToCode(depts.getSelectionModel().getSelectedItem()), nameBox.getText(), Integer.parseInt(numberBox.getText()), Integer.parseInt(credBox.getText())));
                    System.out.println(courseList.get(0));
                    error.setText("");
                } catch (NumberFormatException | IndexOutOfBoundsException e) {


                    error.setText("Error: Number and Credits must be integer values,\nand you must select a department.");
                }

            }

        }));

        Scene scene = new Scene(top, 600, 350);
        //Setting the title to Stage.
        primaryStage.setTitle("Course Listings");


        //Adding the scene to Stage
        primaryStage.setScene(scene);

        //Displaying the contents of the stage
        primaryStage.show();
    }

    public static void main(String args[]) {

        launch(args);


    }
}
